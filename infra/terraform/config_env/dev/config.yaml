# Default variables
region: "us-east-1"
org_name: "rtcek"
app_name: "sso"
aws_vpc_id: "vpc-060f02b7488c8743e"
aws_subnet: ["subnet-071d4c53cac27879f","subnet-05cac359db01d4243","subnet-056275e2497e3d297","subnet-0a10ba0e5a4ad8ea9","subnet-0ff18f2af5b9ab7c0","subnet-09d229ef6fd031d28"]
aws_acm_cerficate_arn: "arn:aws:iam::677276076781:server-certificate/test"

# lambda
aws_lambda_role_arn: "arn:aws:iam::637423277544:role/rtctek-app_name-dev-lambdafunctionrole04"
        
# Tags
aws-migration-project-id: "MPE42366"
division: "st"
department: "a86065"
technicalContact: "SSO-SUPPORT@acs.org"
map_migrated_tag: "mig42366"
aws_vpc_endpoint_service_name: "com.amazonaws.us-east-1.elasticfilesystem"
service_name: "global"

# Security Group variables
aws_sg_configuration:
     # ALB Security Group 
     # The naming format should follow this structure: "purpose" "alb-type". For example, if the purpose is "app" and the NLB type is "internal," the name should be "app-internal"
   - name: "sso-alb-front" 
     aws_sg_ingress_rules :
      -   aws_sg_ingress_cidr_ipv4: ["0.0.0.0/0"]
          aws_sg_inbound_port: [80,443]
          aws_sg_enable_cidr_ipv4: true
          aws_reference_sg : [""]
          aws_reference_sg_id: [""]
          aws_sg_protocal: [""]
     aws_sg_egress_rules:
      -  aws_sg_egress_cidr_ipv4: ["0.0.0.0/0"]
         aws_sg_inbound_port: [-1]    
         aws_sg_enable_cidr_ipv4: true
         aws_reference_sg: [""] 
         aws_reference_sg_id: [""]
         aws_sg_protocal: [""]
   - name: "sso-alb-back" 
     aws_sg_ingress_rules :
      -   aws_sg_ingress_cidr_ipv4: ["0.0.0.0/0"]
          aws_sg_inbound_port: [80,443]
          aws_sg_enable_cidr_ipv4: true
          aws_reference_sg : [""]
          aws_reference_sg_id: [""]
          aws_sg_protocal: [""]
     aws_sg_egress_rules:
      -  aws_sg_egress_cidr_ipv4: ["0.0.0.0/0"]
         aws_sg_inbound_port: [-1]    
         aws_sg_enable_cidr_ipv4: true
         aws_reference_sg: [""] 
         aws_reference_sg_id: [""]
         aws_sg_protocal: [""] 
   - name: "sso-nlb" 
     aws_sg_ingress_rules :
      -   aws_sg_ingress_cidr_ipv4: ["0.0.0.0/0"]
          aws_sg_inbound_port: [80,443]
          aws_sg_enable_cidr_ipv4: true
          aws_reference_sg : [""]
          aws_reference_sg_id: [""]
          aws_sg_protocal: [""]
     aws_sg_egress_rules:
      -  aws_sg_egress_cidr_ipv4: ["0.0.0.0/0"]
         aws_sg_inbound_port: [-1]    
         aws_sg_enable_cidr_ipv4: true
         aws_reference_sg: [""] 
         aws_reference_sg_id: [""]
         aws_sg_protocal: [""]



# S3
s3_prefix: "s3"
create_aws_s3_bucket_policy: true
aws_elb_account_id: "127311923021"

aws_alb_internal: false
aws_alb_port: 443
albs:
  - aws_alb_name: "test"
    aws_target_groups:
      - tg_name: "test"
        health_path: "/"
        priority: ""
        path_pattern: ""

dlsecret:
  [
    {
      name: "sso_db_cloud",
      id: 11166,
      fields: ["server", "username", "password"],
    },
    {
      name: "emeta_database_cloud",
      id: 11156,
      fields: ["server", "username", "password"],
    },
    {
      name: "acs1_ldap",
      id: 11158,
      fields: ["domain", "username", "password"],
    },
    {
      name: "bridge_account",
      id: 11160,
      fields: ["client-id", "client-secret"],
    },
    { name: "cas_ldap", id: 11159, fields: ["domain", "username", "password"] },
    {
      name: "ssooauth",
      id: 11162,
      fields: ["client-id", "client-secret", "tenant"],
    },
    {
      name: "mulesoft_api",
      id: 11161,
      fields: ["client-id", "client-secret", "tenant"],
    },
    {
      name: "KESTORE_PRIVATE_KEY",
      id: 11164,
      fields: ["resource", "password"],
    },
    { 
      name: "KEYSTORE_PASSWORD", 
      id: 11163, 
      fields: ["password"] 
    },
    { 
      name: "signingkey", 
      id: 11157, 
      fields: ["pin-code"] 
    },
    { 
      name: "acs_wildcard_crt", 
      id: 11381, 
      fields: ["private-key","certificate"] 
    },
    { 
      name: "acs_wildcard_bundle_crt_tls", 
      id: 11407, 
      fields: ["certificate"] 
    },
  ]
