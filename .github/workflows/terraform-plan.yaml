name: Terraform Plan
# Runs the workflow on the below events:
# 1. On pull request raised to develop branch
# 2. On pull request raised to main branch
# 3. On push event to develop branch
# 4. On push event to main branch

on:
  workflow_call:
    # Required inputs
    inputs:
      targets:
        description: "targets"
        required: false
        type: string
        default: ""
      env:
        description: "Env name"
        type: string
        required: false
        default: ""
      role-to-assume:
        description: "AWS Role arn"
        type: string
        required: true
      role-session-name:
        description: "AWS Role session name"
        type: string
        required: true
      aws-region-name:
        description: "AWS region name"
        type: string
        required: true
      aws-kms-key-arn:
        description: "AWS kms key arn to decrypt the secrets"
        type: string
        required: false
        default: arn:aws:kms:us-east-1:637423277544:key/76826c40-ca8d-44a1-9b1e-5a5bd3c75e8a
      docker-image-tag:
        description: "Docker image tag"
        type: string
        required: false
      service-name:
        description: "Service name"
        type: string
        required: false
      sops-enable :
        description: "Enable the sops for sops workflow"
        type: boolean
        required: false
        default: false

jobs:
  # This job runs Terraform Plan
  plan:
    name: Plan (${{ inputs.env }})
    runs-on: ubuntu-latest
    steps:
      # Checkout project
      - name: Checkout Project
        uses: actions/checkout@v4

      # Logging in to aws
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ inputs.aws-region-name }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: ${{ inputs.role-session-name }}

      # Composite runner
      - name: Use sops workflow file
        if: ${{ inputs.sops-enable == true }}
        uses: RTC12-Test/my-sso-infra/.github/actions/sops@develop
        with:
         aws-kms-key-arn : ${{ inputs.aws-kms-key-arn }}
         env: ${{ inputs.env }}

      # Replace image tag in json file
      - name: Replacing image tag in json file
        if: ${{ github.repository != 'RTC12-Test/my-sso-infra' }}
        run: |
          sed -i 's/$docker_image_tag"/${{ inputs.docker-image-tag }}"/' service-${{ inputs.service-name}}.json
      
      # Install Terraform CLI
      - name: Terraform install
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.2"

      # Intialization of terraform project
      - name: Terraform init
        run: make ENV=${{ inputs.env}} terraform/init

      # Terraform plan is generated for modules
      - name: Terraform plan
        run: make ENV=${{ inputs.env}} TF_CMD_ARGS='-lock=false ${{ inputs.targets }} -out=terraform_${{ github.sha }}.plan' terraform/plan


      # Uploading terrform plan
      - name: Save terraform plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform_${{ github.sha }}.plan
          path: infra/terraform/terraform_${{ github.sha }}.plan
