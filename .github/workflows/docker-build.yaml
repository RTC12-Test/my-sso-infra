name: Docker Image Build

on:
  workflow_call:
    inputs:
      docker-image-file-path:
        description: "Docker image file path"
        type: string
      docker-image-tag:
        description: "Docker image tag"
        type: string
        required: true
      role-to-assume:
        description: "AWS role arn"
        type: string
        required: true
      role-session-name:
        description: "AWS role session name"
        type: string
        required: true
      ecr-repo-name:
        description: "ECR repo name"
        type: string
        required: true
      aws-region-name:
        description: "AWS region name"
        type: string
        required: true
      push:
        description: "Pushing the docker image to ecr repo"
        type: string
        required: false
      selfhosted-runner:
        description: "Launch Self-hosted runner"
        type: boolean
        required: false
        default: false
    outputs:
      docker-image-url:
        value: ${{ jobs.build-and-publish-image.outputs.docker-image-url }}

jobs:
  build-and-publish-image:
    outputs:
      docker-image-url: ${{ steps.docker-image-url.outputs.docker_image_url }}
    runs-on: ubuntu-latest
    name: Build and Publish Image
    steps:
      # Checking out the code
      - name: Checkout code
        uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      # Download the artifacts
      - name: Download the artifacts to build the Image
        if: ${{ inputs.selfhosted-runner  == false }}
        uses: actions/download-artifact@v4.1.6
        with:
          name: ${{ github.event.repository.name }}
          path: |
            target/

      # Logging to aws
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: ${{ inputs.role-session-name }}
          aws-region: ${{ inputs.aws-region-name }}

      # Logging to ecr
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      # Building the docker image
      - name: Build the docker image
        id: build-image
        env:
          ecr-registry: ${{ steps.login-ecr.outputs.registry }}
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: ${{ inputs.push }}
          file: ${{ inputs.docker-image-file-path }}
          tags: ${{ env.ecr-registry }}/${{ inputs.ecr-repo-name }}:${{ inputs.docker-image-tag }}

      # Output for image tag
      - name: Set output for image tag
        id: docker-image-url
        env:
          ecr-registry: ${{ steps.login-ecr.outputs.registry }}
        run: echo docker_image_url=${{ env.ecr-registry }}/${{ inputs.ecr-repo-name }}:${{ inputs.docker-image-tag }} >> $GITHUB_OUTPUT
